import pandas as pd
import json

print("Updating vulnerability field from text to 0/1 format...")

# Load the CSV dataset
df = pd.read_csv('balanced_vulnerability_dataset.csv')

print(f"Original vulnerability distribution:")
print(df['vulnerability'].value_counts())

# Convert vulnerability field: Non-Vulnerable -> 0, Vulnerable -> 1
df['vulnerability'] = df['vulnerability'].map({
    'Non-Vulnerable': 0,
    'Vulnerable': 1
})

print(f"\nUpdated vulnerability distribution:")
print(df['vulnerability'].value_counts())

# Update the CSV file as well
df.to_csv('balanced_vulnerability_dataset.csv', index=False)
print("✅ Updated CSV file")

# Format 1: Regular JSON with indentation
json_records = df.to_json(orient='records', indent=2)
with open('balanced_vulnerability_dataset.json', 'w', encoding='utf-8') as f:
    f.write(json_records)
print("✅ Updated balanced_vulnerability_dataset.json")

# Format 2: Compact JSON
json_compact = df.to_json(orient='records')
with open('balanced_vulnerability_dataset_compact.json', 'w', encoding='utf-8') as f:
    f.write(json_compact)
print("✅ Updated balanced_vulnerability_dataset_compact.json")

# Format 3: Structured JSON with metadata
structured_data = {
    "metadata": {
        "total_samples": len(df),
        "languages": df['primary_language'].value_counts().to_dict(),
        "vulnerability_distribution": df['vulnerability'].value_counts().to_dict(),
        "severity_distribution": df['severity'].value_counts().to_dict(),
        "top_cwe_ids": df['cwe_id'].value_counts().head(5).to_dict(),
        "fields": list(df.columns),
        "description": "Balanced vulnerability dataset from BigVul",
        "format": "Each record contains vulnerability information with code snippets",
        "vulnerability_encoding": "0 = Non-Vulnerable, 1 = Vulnerable"
    },
    "data": df.to_dict('records')
}

with open('balanced_vulnerability_dataset_structured.json', 'w', encoding='utf-8') as f:
    json.dump(structured_data, f, indent=2)
print("✅ Updated balanced_vulnerability_dataset_structured.json")

# Verify the changes
print("\n=== VERIFICATION ===")
with open('balanced_vulnerability_dataset.json', 'r', encoding='utf-8') as f:
    data = json.load(f)

print(f"Total records: {len(data)}")
print(f"Sample record vulnerability values:")
for i in range(3):
    print(f"  Record {i}: vulnerability = {data[i]['vulnerability']} (type: {type(data[i]['vulnerability'])})")

# Check distribution
vuln_values = [record['vulnerability'] for record in data]
unique_values = set(vuln_values)
print(f"\nUnique vulnerability values: {unique_values}")
print(f"Value counts: 0 = {vuln_values.count(0)}, 1 = {vuln_values.count(1)}")

print("\n✅ All files updated successfully!")
print("Vulnerability field now uses:")
print("  0 = Non-Vulnerable")
print("  1 = Vulnerable")